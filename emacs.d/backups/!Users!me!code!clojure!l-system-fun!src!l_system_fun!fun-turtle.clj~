(ns l-system-fun.fun-turtle)

;; Functions for calculating the position of the turtle

(defn turtle
  "A constructor for turtles"
  [x y angle pen-state]
  {:x x :y y :angle angle :pen pen-state})

(defn rotate-turtle
  "Returns a rotated turtle"
  [current-turtle angle]
  (turtle (:x current-turtle)
          (:y current-turtle)
          (mod (+ (:angle current-turtle) angle) 360)
          (:pen current-turtle)))

(defn- imprecision
  "Round a double to the given number of significant digits"
  [precision d]
  (let [factor (Math/pow 10 precision)]
    (/ (Math/round (* d factor)) factor)))

(defn- next-position
  "Calculate new coordinates, given a current position, distance, and angle"
  [x y angle distance]
  (let [rad-angle (Math/toRadians angle)]
    (map (partial imprecision 14)
         [(+ x (* (Math/cos rad-angle) distance))
          (+ y (* (Math/sin rad-angle) distance))])))

(defn move-turtle
  "Returns a moved turtle"
  [current-turtle distance]
  (let [current [(:x current-turtle) (:y current-turtle)]
        angle (:angle current-turtle)
        pen (:pen current-turtle)
        next (apply next-position (flatten [current angle distance]))]
    (apply turtle (flatten [next angle pen]))))

(let [base-turtle (turtle 0 0 0 true)]
  (-> base-turtle
      (rotate-turtle 90)
      (move-turtle 20)))


(imprecision 15 (Math/sin (Math/toRadians 180)))

